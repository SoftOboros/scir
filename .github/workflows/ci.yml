name: CI
on:
  push:
  pull_request:

jobs:
  python-fixtures:
    name: Python fixtures + checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Bash script syntax check
        run: bash -n scripts/*.sh
      - name: Run Python script compile test
        run: |
          pip install pytest
          pytest -q tests/test_scripts_compile.py
      - name: Generate fixtures
        run: |
          python scripts/gen_fixtures.py -n 8 16
          python scripts/gen_signal_fixtures.py
          python scripts/gen_optimize_fixtures.py
          python scripts/gen_linalg_fixtures.py
      - name: Upload fixtures
        uses: actions/upload-artifact@v4
        with:
          name: scir-fixtures
          path: fixtures/**

  rust-tests:
    name: Rust tests (matrix)
    runs-on: ${{ matrix.os }}
    needs: python-fixtures
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Download fixtures
        uses: actions/download-artifact@v4
        with:
          name: scir-fixtures
          path: fixtures
      - name: Format check
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --workspace -- -D warnings
      - name: Build (no default features on non-Linux)
        if: matrix.os != 'ubuntu-latest'
        run: |
          cargo build --workspace --no-default-features --verbose
      - name: Test (no default features on non-Linux)
        if: matrix.os != 'ubuntu-latest'
        run: |
          cargo test --workspace --no-default-features --verbose
      - name: Build + Test with BLAS (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo build --workspace --features blas --verbose
          cargo test  --workspace --features blas --verbose
