name: gpu
on:
  pull_request:
    branches: [ main ]

jobs:
  cuda-baseline:
    # Avoid running on forks; ensure Linux self-hosted + NVIDIA GPU
    if: github.event.pull_request.head.repo.fork == false && runner.os == 'Linux'
    runs-on: [self-hosted, linux, x64, gpu, nvidia]
    env:
      ENABLE_GPU_CI: ${{ secrets.ENABLE_GPU_CI }}
    steps:
      - name: GPU CI disabled (no-op)
        if: ${{ env.ENABLE_GPU_CI == '' }}
        run: echo "GPU CI is disabled (set ENABLE_GPU_CI secret to enable). Skipping."
      - uses: actions/checkout@v4
        if: ${{ env.ENABLE_GPU_CI != '' }}
      - uses: dtolnay/rust-toolchain@stable
        if: ${{ env.ENABLE_GPU_CI != '' }}
      - name: Ensure sccache (Linux)
        if: ${{ env.ENABLE_GPU_CI != '' }}
        shell: bash
        run: |
          if ! command -v sccache >/dev/null 2>&1; then
            if command -v apt-get >/dev/null 2>&1; then
              sudo apt-get update && sudo apt-get install -y sccache || true
            fi
          fi
      - name: Setup sccache env
        if: ${{ env.ENABLE_GPU_CI != '' }}
        shell: bash
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          TRIPLE=$(rustc -vV | sed -n 's/^host: //p')
          echo "SCCACHE_S3_KEY_PREFIX=/scir/${TRIPLE}" >> $GITHUB_ENV
          # Enable S3 backend only if credentials and bucket/region are present; else use local disk cache
          if [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ] && [ -n "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ] \
             && [ -n "${{ secrets.SCCACHE_BUCKET }}" ] && [ -n "${{ secrets.SCCACHE_REGION }}" ]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "SCCACHE_BUCKET=${{ secrets.SCCACHE_BUCKET }}" >> $GITHUB_ENV
            echo "SCCACHE_REGION=${{ secrets.SCCACHE_REGION }}" >> $GITHUB_ENV
          else
            echo "SCCACHE_DIR=$RUNNER_TEMP/sccache" >> $GITHUB_ENV
            echo "SCCACHE_CACHE_SIZE=5G" >> $GITHUB_ENV
            mkdir -p "$RUNNER_TEMP/sccache"
          fi
      - name: Start sccache server
        if: ${{ env.ENABLE_GPU_CI != '' }}
        run: sccache --start-server || true
      - name: Warm sccache (quick check)
        if: ${{ env.ENABLE_GPU_CI != '' }}
        env:
          CARGO_TARGET_DIR: target-warm
        run: cargo check -p scir-gpu -q || true
      - run: nvidia-smi
        if: ${{ env.ENABLE_GPU_CI != '' }}
      - name: Build CPU-backed GPU crate
        if: ${{ env.ENABLE_GPU_CI != '' }}
        run: cargo build -p scir-gpu --verbose
      - name: Test CUDA feature
        if: ${{ env.ENABLE_GPU_CI != '' }}
        run: cargo test -p scir-gpu --features cuda -- --nocapture
      - name: sccache stats
        if: always()
        run: sccache --show-stats || true
